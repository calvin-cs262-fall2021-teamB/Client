{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Chris Jeong\\\\CS262\\\\cs262-team\\\\client\\\\screens\\\\orderOptions.js\";\nimport React, { useState } from 'react';\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Order from \"../components/Order\";\nimport { globalStyles } from \"../styles/global\";\nexport default function OrderOptionsScreen() {\n  var _this = this;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      order = _useState2[0],\n      setOrder = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      orderItems = _useState4[0],\n      setOrderItems = _useState4[1];\n\n  var handleAddOrder = function handleAddOrder() {\n    Keyboard.dismiss();\n    setOrderItems([].concat(_toConsumableArray(orderItems), [order]));\n    setOrder(null);\n  };\n\n  var completeOrder = function completeOrder(index) {\n    var itemsCopy = _toConsumableArray(orderItems);\n\n    itemsCopy.splice(index, 1);\n    setOrderItems(itemsCopy);\n  };\n\n  return React.createElement(View, {\n    style: globalStyles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: globalStyles.OrdersWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: globalStyles.myOrders,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: globalStyles.sectionTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }, \"My Orders\"), React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.OS === 'ios' ? 'padding' : 'height',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return handleAddOrder();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  }, React.createElement(View, {\n    style: globalStyles.addWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 29\n    }\n  }, React.createElement(TextInput, {\n    style: globalStyles.addText,\n    placeholder: \"New Order\",\n    value: order,\n    onChangeText: function onChangeText(text) {\n      return setOrder(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 33\n    }\n  }))))), React.createElement(View, {\n    style: globalStyles.items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, orderItems.map(function (item, index) {\n    return React.createElement(TouchableOpacity, {\n      key: index,\n      onPress: function onPress() {\n        return completeOrder(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    }, React.createElement(Order, {\n      text: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }\n    }));\n  })), React.createElement(Text, {\n    style: globalStyles.sectionTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"Available Orders\")), React.createElement(View, {\n    style: globalStyles.chooseOrderWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: globalStyles.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: globalStyles.chooseOrderText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, \"Choose an Order\"))));\n}","map":{"version":3,"sources":["C:/Users/Chris Jeong/CS262/cs262-team/client/screens/orderOptions.js"],"names":["React","useState","Order","globalStyles","OrderOptionsScreen","order","setOrder","orderItems","setOrderItems","handleAddOrder","Keyboard","dismiss","completeOrder","index","itemsCopy","splice","container","OrdersWrapper","myOrders","sectionTitle","Platform","OS","addWrapper","addText","text","items","map","item","chooseOrderWrapper","input","chooseOrderText"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport { Keyboard, KeyboardAvoidingView, Platform, Text, TextInput, TouchableOpacity, View } from 'react-native';\r\nimport Order from '../components/Order';\r\nimport {globalStyles} from '../styles/global';\r\n\r\nexport default function OrderOptionsScreen() {\r\n    const [order, setOrder] = useState();\r\n    const [orderItems, setOrderItems] = useState([]);\r\n\r\n    const handleAddOrder = () => {\r\n        Keyboard.dismiss();\r\n        setOrderItems([...orderItems, order]);\r\n        setOrder(null);\r\n    }\r\n\r\n    const completeOrder = (index) => {\r\n        let itemsCopy = [...orderItems];\r\n        itemsCopy.splice(index, 1);\r\n        setOrderItems(itemsCopy);\r\n    }\r\n    return (\r\n        <View style={globalStyles.container}>\r\n            <View style={globalStyles.OrdersWrapper}>\r\n                {/* My Orders */}\r\n                <View style={globalStyles.myOrders}>\r\n                    <Text style={globalStyles.sectionTitle}>My Orders</Text>\r\n                    <KeyboardAvoidingView \r\n                        behavior={ Platform.OS === 'ios' ? 'padding' : 'height'}>\r\n                        <TouchableOpacity onPress={() => handleAddOrder()}>\r\n                            <View style={ globalStyles.addWrapper }>\r\n                                <TextInput style={globalStyles.addText} placeholder='New Order' value={order} onChangeText={text=>setOrder(text)}></TextInput>\r\n                            </View>\r\n                        </TouchableOpacity>\r\n                    </KeyboardAvoidingView>\r\n                </View>\r\n\r\n                <View style={globalStyles.items}>\r\n                {/* This is where the orders will go */}\r\n                {\r\n                    orderItems.map((item, index) => {\r\n                    return(\r\n                        <TouchableOpacity key={index} onPress={() => completeOrder(index)}>\r\n                            <Order text={item} />\r\n                        </TouchableOpacity>\r\n                    )\r\n                    })\r\n                }\r\n                </View>\r\n\r\n                {/* Available Orders */}\r\n                <Text style={globalStyles.sectionTitle}>Available Orders</Text>\r\n            </View>\r\n        \r\n            {/* Choose an Order */}\r\n            <View style={ globalStyles.chooseOrderWrapper }>\r\n                <TouchableOpacity style={ globalStyles.input }>\r\n                    <Text style={globalStyles.chooseOrderText}>Choose an Order</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}